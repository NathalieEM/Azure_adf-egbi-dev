{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-egbi-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Curriculum_Requirement_Relations')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Curriculum_Requirement_Relations",
						"description": "",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_SF_Curriculum_Requirement_Relations",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Junction_Curriculum_Requirement_Header__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Curriculum__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Curriculum__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Requirement_Header__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Requirement_Header__c",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Curriculum_Requirement_Relations",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Curriculum_Requirement_Relations",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_SF_Curriculum_Requirement_Relations",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Curriculum_Requirement_Relations]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Curriculum_Requirement_Relations_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Curriculum_Requirement_Relations_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Curriculum_Requirement_Relations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Curriculum_Requirement_Relations - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Curriculum_Requirement_Relations').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Curriculum_Requirement_Relations').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Curriculum_Requirement_Relations').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Curriculum_Requirement_Relations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Curriculum_Requirement_Relations]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Curriculum_Requirement_Relations - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Departments')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Departments",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Trunc_Mrr_Department",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Department__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastActivityDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastActivityDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Department_Details__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Department_Details__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Department_Fax__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Department_Fax__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Department_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Department_Number__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Department_Phone__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Department_Phone__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Company__c",
											"type": "String"
										},
										"sink": {
											"name": "Company__c",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Departments",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Departments",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Trunc_Mrr_Department",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Departments]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Departments_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Departments_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Departments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Departments - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Departments').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Departments').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Departments').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Departments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Departments]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Departments",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Departments - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Employee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Employee",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunct_Mrr_SF_Employee",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT *\nFROM CompSuite__Employee__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastActivityDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastActivityDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Active__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "CompSuite__Active__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CompSuite__Department__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Department__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Employee_Email__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Employee_Email__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Employee_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Employee_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Site__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Site__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__User__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__User__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Employee_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "Employee_Number__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emp_User_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Emp_User_ID__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "User_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "User_ID__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Employee_Title__c",
											"type": "String"
										},
										"sink": {
											"name": "Employee_Title__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Company__c",
											"type": "String"
										},
										"sink": {
											"name": "Company__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Exists__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Exists__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "FirstTableCheck__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "FirstTableCheck__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Owner_Name__c",
											"type": "String"
										},
										"sink": {
											"name": "Owner_Name__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Business_Unit__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Business_Unit__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunct_Mrr_SF_Employee",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Employee]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Employee_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Employee_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Employee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Employee - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Employee').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Employee').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Employee').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Employee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Employee]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Employee_replica - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Job_Function')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Job_Function",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_SF_Job_Function",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Job_Function_Group__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Company__c",
											"type": "String"
										},
										"sink": {
											"name": "Company__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Job_Function",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Job_Function",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_SF_Job_Function",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Job_Function]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Job_Function_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Job_Function_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Job_Function",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Job_Function - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Job_Function').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Job_Function').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Job_Function').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Job_Function",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Curriculum]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Job_Function - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Job_Function_Curriculum_Relation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Job_Function_Curriculum_Relation",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_SF_Job_Function_Curriculum_Relation",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Junction_Job_Function_Curriculum__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Curriculum__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Curriculum__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Job_Function_Group__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Job_Function_Group__c",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Curriculum_JF_Relation",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Job_Function_Curriculum_Relation",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_SF_Job_Function_Curriculum_Relation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Job_Function_Curriculum_Relation]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Curriculum_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Job_Function_Curriculum_Relation_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Job_Function_Curriculum_Relation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Job_Function_Curriculum_Relation - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Job_Function_Curriculum_Relation').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Job_Function_Curriculum_Relation').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Job_Function_Curriculum_Relation').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Job_Function_Curriculum_Relation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Job_Function_Curriculum_Relation]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Job_Function_Curriculum_Relation - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Job_Function_Employee_Relations')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Job_Function_Employee_Relations",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_SF_Job_Function_Employee_Relations",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Junction_Employee_Job_Function__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Employee__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Employee__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Job_Function_Group__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Job_Function_Group__c",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Employee_JF_Relation",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Job_Function_Employee_Relations",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_SF_Job_Function_Employee_Relations",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Job_Function_Employee_Relations]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Job_Function_Employee_Relations_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Job_Function_Employee_Relations_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Job_Function_Employee_Relations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Job_Function_Employee_Relations - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Job_Function_Employee_Relations').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Job_Function_Employee_Relations').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Job_Function_Employee_Relations').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Job_Function_Employee_Relations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Job_Function_Employee_Relations]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Job_Function_Employee_Relations - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Master_Document')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Master_Document",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_training_Mrr_SF_Master_Document",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Document_Header__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RecordTypeId",
											"type": "String"
										},
										"sink": {
											"name": "RecordTypeId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastActivityDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastActivityDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Applicable_Curriculums__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Applicable_Curriculums__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Change_Control__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Change_Control__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Delivery_URL__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Delivery_URL__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Training_Eff_Protocol__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Training_Eff_Protocol__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Document_State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Document_State__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Document_Type__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Document_Type__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Effective_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "CompSuite__Effective_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__File_Id__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__File_Id__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__File_URL__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__File_URL__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Keywords__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Keywords__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__PDF_Id__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__PDF_Id__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__PDF_URL__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__PDF_URL__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Version__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Version__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Old_Master_Document_Number1__c",
											"type": "String"
										},
										"sink": {
											"name": "Old_Master_Document_Number1__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PDF_Link__c",
											"type": "String"
										},
										"sink": {
											"name": "PDF_Link__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Last_Periodic_Review__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Last_Periodic_Review__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Next_Periodic_Review__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Next_Periodic_Review__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Periodic_Review_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Periodic_Review_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Update_Date__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Update_Date__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Document_Legacy_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "Document_Legacy_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Is_this_a_form__c",
											"type": "String"
										},
										"sink": {
											"name": "Is_this_a_form__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Document_Header__c",
											"type": "String"
										},
										"sink": {
											"name": "Document_Header__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Preview_PDF__c",
											"type": "String"
										},
										"sink": {
											"name": "Preview_PDF__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Template_for_Type__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Template_for_Type__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Document_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "Document_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Department__c",
											"type": "String"
										},
										"sink": {
											"name": "Department__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Assemblie__c",
											"type": "String"
										},
										"sink": {
											"name": "Assemblie__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Company__c",
											"type": "String"
										},
										"sink": {
											"name": "Company__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Document_Category__c",
											"type": "String"
										},
										"sink": {
											"name": "Document_Category__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ECO_Number_MP_System__c",
											"type": "String"
										},
										"sink": {
											"name": "ECO_Number_MP_System__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Keywords_Filter__c",
											"type": "String"
										},
										"sink": {
											"name": "Keywords_Filter__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Location_of_Completed_Forms__c",
											"type": "String"
										},
										"sink": {
											"name": "Location_of_Completed_Forms__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Master_Document_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "Master_Document_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Number_of_Controlled_Copies__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Number_of_Controlled_Copies__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Old_Master_Document_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "Old_Master_Document_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Name__c",
											"type": "String"
										},
										"sink": {
											"name": "Project_Name__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QA_Approval_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "QA_Approval_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Business_Unit__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Business_Unit__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Document_Legacy_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Document_Legacy_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Master_Document",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Master_Document",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_training_Mrr_SF_Master_Document",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Master_Document]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Master_Document_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Master_Document_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Master_Document",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Master_Document - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Master_Document').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Master_Document').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Master_Document').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Master_Document",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Master_Document]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Master_Document - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Record_Type')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Record_Type",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_Record_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from RecordType\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DeveloperName",
											"type": "String"
										},
										"sink": {
											"name": "DeveloperName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NamespacePrefix",
											"type": "String"
										},
										"sink": {
											"name": "NamespacePrefix",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessProcessId",
											"type": "String"
										},
										"sink": {
											"name": "BusinessProcessId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SobjectType",
											"type": "String"
										},
										"sink": {
											"name": "SobjectType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsActive",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsActive",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Record_Type",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_SF_Record_Type",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_Record_Type",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Record_Type]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Record_Type_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Record_Type_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Record_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Record_Type - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Record_Type').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Record_Type').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Record_Type').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Record_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Record_Type]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Record_Type - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Requirement_Header')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Requirement_Header",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_SF_Requirement_Header",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastActivityDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastActivityDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Curriculums__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Curriculums__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Days_to_Complete__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "CompSuite__Days_to_Complete__c",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CompSuite__Document__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Document__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Requirement_Frequency__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Requirement_Frequency__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Training_Eff_Protocol__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Training_Eff_Protocol__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Number_of_Versions__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "CompSuite__Number_of_Versions__c",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Requirement_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Requirement_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Requirement_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Requirement_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_SF_Requirement_Header",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Requirement_Header]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Requirement_Header_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Requirement_Header_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Requirement_Header",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Requirement_Header - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Requirement_Header').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Requirement_Header').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Requirement_Header').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Requirement_Header",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Requirement_Header]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Requirement_Header - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_States')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_States",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_States",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__State__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastActivityDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastActivityDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__State_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_States",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_SF_Mrr_State",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_States",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_States]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_States_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_States_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_States",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_States - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_States').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_States').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_States').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_States",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_States]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_States - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Training_Assignment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Training_Assignment",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_SF_Training_Assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Training_Assignment__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RecordTypeId",
											"type": "String"
										},
										"sink": {
											"name": "RecordTypeId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastActivityDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastActivityDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Classroom__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Classroom__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Completion_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "CompSuite__Completion_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Days_to_Complete__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "CompSuite__Days_to_Complete__c",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CompSuite__Document_Header__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Document_Header__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Document_Revision__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Document_Revision__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Download_PDF__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Download_PDF__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Due_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "CompSuite__Due_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Employee_Email__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Employee_Email__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Employee__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Employee__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Link_to_on_line_Training__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Link_to_on_line_Training__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Record_Type__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Record_Type__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Requirement_Header__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Requirement_Header__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Requirement_Revision_Descr__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Requirement_Revision_Descr__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Requirement_Revision_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Requirement_Revision_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Requirement_Revision__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Requirement_Revision__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Training_Assignment_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Training_Assignment_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Training_Completed__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "CompSuite__Training_Completed__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CompSuite__Training_Objective__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Training_Objective__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Training_Purpose__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Training_Purpose__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Course_Classification__c",
											"type": "String"
										},
										"sink": {
											"name": "Course_Classification__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Is_Last_Version__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "CompSuite__Is_Last_Version__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Employee_is_logged_in_user__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Employee_is_logged_in_user__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CompSuite__Requirement_Revision_Notes_Attachments__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Requirement_Revision_Notes_Attachments__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Document_Revision_Version__c",
											"type": "String"
										},
										"sink": {
											"name": "Document_Revision_Version__c",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Document_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "Document_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Trainer__c",
											"type": "String"
										},
										"sink": {
											"name": "Trainer__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Exams_Cycles__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "CompSuite__Exams_Cycles__c",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CompSuite__Executed_Protocols__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "CompSuite__Executed_Protocols__c",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CompSuite__Number_of_allowed_failures__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "CompSuite__Number_of_allowed_failures__c",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CompSuite__Number_of_failures__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "CompSuite__Number_of_failures__c",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CompSuite__Passed_Exam__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "CompSuite__Passed_Exam__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CompSuite__Score__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "CompSuite__Score__c",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CompSuite__Training_Effectiveness_Protocol__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Training_Effectiveness_Protocol__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedTime__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedTime__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Employee_Company__c",
											"type": "String"
										},
										"sink": {
											"name": "Employee_Company__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Exam__c",
											"type": "String"
										},
										"sink": {
											"name": "Exam__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Is_Open__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Is_Open__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Training_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "training_Mrr_SF_Training_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_SF_Training_Assignment",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Training_Assignment]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Training_Assignment_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Training_Assignment_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Training_Assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Training_Assignment - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Training_Assignment').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Training_Assignment').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Training_Assignment').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Training_Assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Training_Assignment]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Training_Assignment - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_Suppliers_Audit_Activities_Followup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "trunc_Mrr_Suppliers_Audit_Activities_Followup",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ScoreCards].[trunc_Mrr_Suppliers_Audit_Activities_Followup]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy Mrr_Calc_Suppliers_Audit_Activities_Followup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_Suppliers_Audit_Activities_Followup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Supplier Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "SupplierType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "EAN #",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "Audit Plan (Month)",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "AuditPerfom",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "ActualAuditDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "AuditDurationDays",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "LeadAuditorName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "Audit Team",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "AuditType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 13
										},
										"sink": {
											"name": "Findings_Critical",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 14
										},
										"sink": {
											"name": "Findings_Major",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 15
										},
										"sink": {
											"name": "Findings_Moderate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 16
										},
										"sink": {
											"name": "Findings_Observ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 17
										},
										"sink": {
											"name": "AuditResults",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 18
										},
										"sink": {
											"name": "AuditorScore",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Suppliers_Audit_Activities_Followup",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Mrr_Calc_Suppliers_Audit_Activities_Followup",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Mrr_Suppliers_Audit_Activities_Followup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Mrr_Calc_Suppliers_Audit_Activities_Followup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [SupplierName]\n      ,[Supplier Number]\n      ,[SupplierType]\n      ,[Location]\n      ,[EAN #]\n      ,[AuditPerfom]\n      ,case when [ActualAuditDate] like '%Not done moved%' then null else [ActualAuditDate] end as [ActualAuditDate]\n      ,[AuditDurationDays]\n      ,[LeadAuditorName]\n      ,case when [Audit Team] = 'NA' then null else [Audit Team] end as [Audit Team]\n      ,[AuditType]\n      ,case when [Findings_Critical]  = 'NA' then null else [Findings_Critical] end as [Findings_Critical]\n      ,case when [Findings_Major]\t  = 'NA' then null else [Findings_Major] end as [Findings_Major]\n      ,case when [Findings_Moderate]  = 'NA' then null else [Findings_Moderate] end as [Findings_Moderate]\n      ,case when [Findings_Observ]\t  = 'NA' then null else [Findings_Observ] end as [Findings_Observ]\n      ,case when [AuditResults] = 'NA' then null else [AuditResults] end as [AuditResults]\n      ,case when [AuditorScore] = 'NA' then null else [AuditorScore] end as [AuditorScore]\n  FROM [ScoreCards].[Mrr_Calc_Suppliers_Audit_Activities_Followup]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supplier Number",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EAN #",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EAN #",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AuditPerfom",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AuditPerfom",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActualAuditDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ActualAuditDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "AuditDurationDays",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AuditDurationDays",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LeadAuditorName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LeadAuditorName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Audit Team",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Audit Team",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AuditType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AuditType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Findings_Critical",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Findings_Critical",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Findings_Major",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Findings_Major",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Findings_Moderate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Findings_Moderate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Findings_Observ",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Findings_Observ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AuditResults",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AuditResults",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AuditorScore",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AuditorScore",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Mrr_Calc_Suppliers_Audit_Activities_Followup",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Mrr_Suppliers_Audit_Activities_Followup",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ScoreCards/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_Fact_ComplaintHeader')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Stg_Fact_ComplaintHeader",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_trunc_Stg_Fact_ComplaintHeader",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select \n cast(c.id as nvarchar) as U_PortalID\n,c.fSerialNumber\n,c.callID\n,c.status\n,c.dtCreatedDate \n,c.Subject\n,c.closeDate\n,c.itemName\n,c.itemCode\n,c.Customer\n,c.custmrName\n,c.callType\n,c.ComplaintSource\n,s.servicedate\n,s.dtcheckoutdate\n,cast(s.status as nvarchar) serviceStatus\n,s.fcreatedbyid\n,s.UserServiceCenterSAPID\nfrom srv.Mrr_Complaint C\nleft join srv.Mrr_Service   S on C.fServiceID = S.ID\n\nunion all\n\nselect \n U_PortalID\n,internalSN\n,callid\n,status\n,U_CompDate\n,subject\n,closeDate\n,itemName\n,itemCode\n,customer\n,custmrName\n,callType\n,NULL as ComplaintSource\n,U_ServiceDate\n,U_dtcheckoutdate\n,U_ServiceStatus\n,cast(userSign as int) userSign\n,U_UserServiceCenter\nfrom sap.Mrr_OSCL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "U_PortalID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "U_PortalID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fSerialNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "fSerialNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "callID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "callID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "status",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "dtCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "dtCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Subject",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Subject",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "closeDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "closeDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "itemName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "itemName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "itemCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "itemCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Customer",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Customer",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "custmrName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "custmrName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "callType",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "callType",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "ComplaintSource",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ComplaintSource",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "servicedate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "servicedate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "dtcheckoutdate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "dtcheckoutdate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "serviceStatus",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "serviceStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fcreatedbyid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "fcreatedbyid",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "UserServiceCenterSAPID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserServiceCenterSAPID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Mrr_Complaint",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Stg_Fact_ComplaintHeader",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_trunc_Stg_Fact_ComplaintHeader",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[srv].[sp_trunc_Stg_Fact_ComplaintHeader]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Service/Stg"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-29T14:10:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_Fact_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Stg_Fact_Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "with Cte as (\nselect Device,[Target],max(ID) as CurrentLoacation\nfrom [EDHR].[Mrr_DeviceMovement_Replica]\n--where Device = 1842256\ngroup by Device,[Target]\n)\n\nSELECT \n _ParentData.ID as ParentID\n,_ParentType._DisplayedName as ParentTypeDescription\n,_ParentData.StartTime as ParentStartTime\n,_ParentData.EndTime as ParentEndTime\n,_ChildType._DisplayedName as  DisplayedName\n,[_DeviceProcedureData].[ID]\n,[_DeviceProcedureData].[Procedure]\n,[_DeviceProcedureData].[StartTime]\n,[_DeviceProcedureData].[EndTime]\n,[_DeviceProcedureData].[ExecutedBy]\n,[_DeviceProcedureData].[Comments]\n,[_DeviceProcedureData].[Result]\n,[_DeviceProcedureData].[FailReason]\n,[_DeviceProcedureData].[PCAppSoftwareVersion]\n,[_DeviceProcedureData].[Deleted]\n,[_DeviceProcedureData].[DeletedBy]\n,[_DeviceProcedureData].[DeletedTime]\n,[_DeviceProcedureData].[InsertTime]\n,[_DeviceProcedureData].[LastUpdateTime]\n,[_DeviceProcedureData].[OriginalProcedureId]\n--,[_DeviceProcedureData].[_QcApprovalTime]\n--,[_DeviceProcedureData].[_QcApprover]\n,[_DeviceProcedureData].[Device]\n,[_Device].SerialNumber\n,[_DeviceProcedureData].[DeviceSoftwareVersion]\n,_Location.[Name]\nFROM [EDHR].[Mrr_DeviceProcedureData_replica]   as _DeviceProcedureData\njoin [EDHR].[Mrr_ProcedureType_Replica]\t\t\tas _ChildType  on [_DeviceProcedureData].[Procedure] = _ChildType.ID\njoin [EDHR].[Mrr_DeviceProcedureData_replica]\tas _ParentData on [_DeviceProcedureData].Parent = _ParentData.Id\njoin [EDHR].[Mrr_ProcedureType_Replica]\t\t\tas _ParentType on _ParentData.[Procedure] = _ParentType.ID\njoin [EDHR].[Mrr_Device_Replica]\t\t\t\tas _Device     on _Device.ID = _DeviceProcedureData.Device\njoin Cte\t\t\t\t\t\t\t\t\t\t\t\t\t   on Cte.Device = _DeviceProcedureData.Device\njoin [EDHR].Mrr_Location_Replica as _location\t\t\t\t   on _location.ID = Cte.[Target]\nWHERE Isnull([_DeviceProcedureData].[EndTime], '1980-01-01 00:00:00.000' )  >='1980-01-01 00:00:00.000'  \n  and [_DeviceProcedureData].[Device]='1842256'\n  --and_ParentType._DisplayedName = 'DHR'\n  --and and _ChildType._DisplayedName = 'Assembly'\n--ORDER BY   [_ParentStartTime], (\t_ParentType._OrderValue * 10000 + _ChildType._OrderValue)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ParentID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ParentID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ParentTypeDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ParentTypeDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ParentStartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ParentStartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ParentEndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ParentEndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DisplayedName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DisplayedName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Procedure",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Procedure",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ExecutedBy",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ExecutedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Comments",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Comments",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Result",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Result",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FailReason",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FailReason",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PCAppSoftwareVersion",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PCAppSoftwareVersion",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DeletedBy",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DeletedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DeletedTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DeletedTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "InsertTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "InsertTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LastUpdateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LastUpdateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "OriginalProcedureId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OriginalProcedureId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Device",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Device",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SerialNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SerialNumber",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DeviceSoftwareVersion",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DeviceSoftwareVersion",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Mrr_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Stg_Fact_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "EDHR/Stg"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_Fact_OrdersAndShipments')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "trunc Stg_Fact_OrdersAndShipments",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[srv].[sp_trunc_Stg_Fact_OrdersAndShipments]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy Stg_Fact_OrdersAndShipments",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc Stg_Fact_OrdersAndShipments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select \n ordr.DocEntry\n,ordr.DocNum\n,ordr.canceled\n,ordr.DocStatus\n,ordr.DocDate\n,ordr.CardCode\n,ordr.CardName\n,ordr.U_OrderType\n,rdr1.LineNum\n,rdr1.LineStatus\n,rdr1.ItemCode\n,rdr1.ShipDate\n,rdr1.SerialNum\n,spac.Status\n,sser.LineId\n,sser.U_SerialNo\nfrom sap.Mrr_ORDR_replica ordr\njoin sap.Mrr_RDR1_replica rdr1 on ordr.DocEntry = rdr1.DocEntry\njoin sap.Mrr_Srv_Packing  spac on cast(ordr.docnum as nvarchar) = spac.u_so\njoin sap.Mrr_Srv_Serials  sser on sser.DocEntry = spac.DocEntry",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DocEntry",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DocEntry",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DocNum",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DocNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "canceled",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "canceled",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DocStatus",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DocStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DocDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DocDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CardCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CardCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CardName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CardName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "U_OrderType",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "OrderType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LineNum",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LineNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LineStatus",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "LineStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ItemCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ItemCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SerialNum",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SerialNum",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LineId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LineId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "U_SerialNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "U_SerialNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Stg_Fact_OrdersAndShipments",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Stg_Fact_OrdersAndShipments",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Service/Stg"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-13T08:50:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_Fact_Trending')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Stg_Fact_Trending",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_trunc_Stg_Fact_Trending",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[srv].[sp_Stg_Fact_Trending]",
								"storedProcedureParameters": {
									"Date": {
										"type": "DateTime",
										"value": "2017-01-01"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PortalID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PortalID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMR#",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CMR#",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Customer Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Customer Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DNR#",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DNR#",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Awareness Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Awareness Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "P/N",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "P/N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "P/N Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "P/N Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Code Category Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Code Category Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Category Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Category Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Code Error Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Code Error Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Error Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Error Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Code Analysis Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Code Analysis Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Analysis Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Analysis Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Code Analysis Error Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Code Analysis Error Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Analysis Error Codes",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Analysis Error Codes",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Date closed",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Date closed",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "KnownID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "KnownID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "U_RepairLevel",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RepairLevel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "U_Level3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Level3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "internalSN",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "internalSN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "U_PortalServiceID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "U_PortalServiceID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ServiceStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ServiceStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "U_SC_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "U_SC_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastUserIssue",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LastUserIssue",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastUserDiagnostic",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LastUserDiagnostic",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sp_Stg_Fact_Trending",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Stg_Fact_Trending",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_trunc_Stg_Fact_Trending",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[srv].[sp_trunc_Stg_Fact_Trending]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Service/Stg"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-11T13:32:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_IQC_Followup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Stg_IQC_Followup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc Stg_IQC_Followup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select\nYEAR([End date (end of IQC)]) Year\n,DATEPART(week,[End date (end of IQC)]) WeeK\n,cast([Date of receipt] as date) DateReciept\n,cast([End date (end of IQC)] as date) EndDateIQC\n,[MRB #] as Itemcode\n,[Product belongs to] ProductType\n,[Supplier Cod] SupplierID\n,[Supplier] as SupplierName\n--,[Lot Source_Supplier /_Q Core] as SourceLot\n,[Total Qty. Received] TotalRecQty\n,[Sample Size] as SampleSize\n,Case when [Batch Disposition (Pass/Fail)]='PAss'\t\t then '1'\n\t  when [Batch Disposition (Pass/Fail)]='Fail'\t\t then '0'\n\t  when ISNULL([Batch Disposition (Pass/Fail)],'')='' then Null end  as 'Pass/Fail',\n[Batch #] [Batch Number],\n[Rev number ]\n from [ScoreCards].[Mrr_IQC_Followup]\n where YEAR([End date (end of IQC)])>='2015' \n and supplier<>'In house'\n and ([Total Qty. Received] not LIKE '%+%'\n and  [Total Qty. Received]  not LIKE '%(%')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WeeK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WeeK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EndDateIQC",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "EndDateIQC",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SupplierID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateReciept",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateReciept",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Itemcode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Itemcode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TotalRecQty",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TotalRecQty",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Pass/Fail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Pass/Fail",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Rev number ",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Rev number ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Batch Number",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Batch Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Mrr_IQC_Followup",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Stg_IQC_Followup",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc Stg_IQC_Followup",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ScoreCards].[trunc_Stg_IQC_Followup]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "ScoreCards/Stg"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_ScarLog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Stg_ScarLog",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc Stg_ScarLog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select YEAR(ScarSendingDate) as 'Year', DATEPART(WEEK,ScarSendingDate) as 'Week' , SupplierName,SupplierNo,PartDescription,PN,MRBNo,Descriptionofdeviation,ScarSendingDate,\nAllowedReturnDate,ReminderDate,ScarReturningDate\n\n from ScoreCards.Mrr_ScarLog\n where YEAR(ScarSendingDate)>='2016'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Week",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Week",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PartDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PartDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PN",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MRBNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MRBNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Descriptionofdeviation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DescriptionofDeviation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ScarSendingDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ScarSendingDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "AllowedReturnDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AllowedReturnDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ReminderDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ReminderDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ScarReturningDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ScarReturningDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Mrr_ScarLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Stg_ScarLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc Stg_ScarLog",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ScoreCards].[trunc_Stg_ScarLog]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "ScoreCards/Stg"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-08T09:04:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_Suppiers_OTD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Stg_SuppliersOTD",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc Stg_SuppliersOTD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[ScoreCards].[sp_Stg_SuppliersOTD]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "cardcode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "cardcode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "cardname",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "cardname",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QcorePO",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QcorePO",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PO Line Num",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PO Line Num",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "VendorRef#",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VendorRef#",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PN",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Item Group Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Item Group Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "OpenQuantity",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "OpenQuantity",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "ShippedQuantity",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "ShippedQuantity",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "LastShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LastShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Requested Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Requested Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Mrr_Suppliers_Audit_Activities_Followup",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Stg_Suppliers_OTD",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc Stg_SuppliersOTD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ScoreCards].[sp_trunc_Stg_SuppliersOTD]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "ScoreCards/Stg"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_Suppliers_Audit_Activities_Followup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Stg_Suppliers_Audit_Activities_Followup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc Stg_Suppliers_Audit_Activities_Followup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select YEAR(ActualAuditDate) as 'Year',DATEPART(WEEK,ActualAuditDate) as 'Week', *\n from [ScoreCards].[Mrr_Suppliers_Audit_Activities_Followup]\n where SupplierName<>'Supplier Name'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Week",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Week",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supplier Number",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EAN #",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EAN #",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AuditPerfom",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AuditPerfom",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActualAuditDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ActualAuditDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "AuditDurationDays",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AuditDurationDays",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LeadAuditorName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LeadAuditorName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Audit Team",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Audit Team",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AuditType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AuditType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Findings_Critical",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Findings_Critical",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Findings_Major",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Findings_Major",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Findings_Moderate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Findings_Moderate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Findings_Observ",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Findings_Observ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AuditResults",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AuditResults",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AuditorScore",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AuditorScore",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Mrr_Suppliers_Audit_Activities_Followup",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Stg_Suppliers_Audit_Activities_Followup",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc Stg_Suppliers_Audit_Activities_Followup",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ScoreCards].[trunc_Stg_Suppliers_Audit_Activities_Followup]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "ScoreCards/Stg"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		}
	]
}