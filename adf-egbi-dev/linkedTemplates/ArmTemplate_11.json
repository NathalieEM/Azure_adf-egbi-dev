{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-egbi-dev"
		},
		"SAP_Sorrel_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SAP_Sorrel'"
		},
		"SalesforceSandBox_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SalesforceSandBox'"
		},
		"SalesforceSandBox_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'SalesforceSandBox'"
		},
		"TESTSorrelDB_25022020_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TESTSorrelDB_25022020'"
		},
		"ls_sap_integrator_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sap_integrator'"
		},
		"sql_rptsrv_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sql_rptsrv'"
		},
		"sqlsrv_sap_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlsrv_sap'"
		},
		"sqlsrv_sap_TestNewQcoreDB_05012020_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlsrv_sap_TestNewQcoreDB_05012020'"
		},
		"SalesforceSandBox_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "qcoremedical--sandbox.my.salesforce.com"
		},
		"SalesforceSandBox_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "nathalie.mayzlits@qcore.com.sandbox"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SAP_Sorrel')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SAP_Sorrel_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ir-sap",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceSandBox')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('SalesforceSandBox_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('SalesforceSandBox_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SalesforceSandBox_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('SalesforceSandBox_securityToken')]"
					},
					"apiVersion": "48.0"
				},
				"connectVia": {
					"referenceName": "SalesForce-azure-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TESTSorrelDB_25022020')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('TESTSorrelDB_25022020_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ir-sap",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sap_integrator')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_sap_integrator_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ir-sap",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_rptsrv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('sql_rptsrv_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ir-sap",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlsrv_sap')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('sqlsrv_sap_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ir-sap",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlsrv_sap_TestNewQcoreDB_05012020')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('sqlsrv_sap_TestNewQcoreDB_05012020_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ir-sap",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dwh_IQC_Followup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Dwh_IQC_Followup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc Dwh_IQC_Followup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WeeK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WeeK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EndDateIQC",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndDateIQC",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SupplierID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateReciept",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateReciept",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Itemcode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Itemcode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TotalRecQty",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "TotalRecQty",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Pass/Fail",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Pass/Fail",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Rev number ",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Rev number ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Batch Number",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Batch Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Stg_IQC_Followup",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dwh_IQC_Followup",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc Dwh_IQC_Followup",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ScoreCards].[trunc_dwh_IQC_Followup]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "ScoreCards/Dwh"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dwh_ScarLog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Dwh_ScarLog",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc Dwh_ScarLog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Week",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Week",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PartDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PartDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PN",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MRBNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MRBNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DescriptionofDeviation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DescriptionofDeviation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ScarSendingDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ScarSendingDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "AllowedReturnDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "AllowedReturnDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ReminderDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ReminderDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ScarReturningDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ScarReturningDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Stg_ScarLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dwh_ScarLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc Dwh_ScarLog",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ScoreCards].[trunc_Dwh_ScarLog]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "ScoreCards/Dwh"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_Fact_SuppliersPN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Mrr_Fact_SuppliersPN",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc Mrr_Fact_SuppliersPN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct ItemCode,T0.CardCode,T1.CardName,U_ScoreCard from sap.Mrr_OSCN T0\nleft join sap.Mrr_OCRD_replica T1 on T0.cardcode=T1.cardcode",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ItemCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ItemCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CardCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CardName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "U_ScoreCard",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ScoreCard",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Mrr_Fact_SuppliersPN",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dwh_fact_supplierspn",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc Mrr_Fact_SuppliersPN",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ScoreCards].[sp_trunc_Dwh_Fact_SuppliersPN]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "ScoreCards/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-08T12:34:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_QUAL_4000_0000776_Rev_3_0_Receiving_Log')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "File Name Changed to \"QUAL_4000_0000776_Rev_3_0_Receiving_Log\"",
				"activities": [
					{
						"name": "Mrr_QUAL_4000_0000776_Rev_3_0_Receiving_Log",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Mrr_IQC_Followup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Part Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Part Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supplier Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Supplier Cod",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Lot Source\nSupplier /\nQ Core",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Lot Source Supplier / Q Core",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supplier",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Supplier",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Drawing Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Drawing Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rev number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rev number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Product it belongs to",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Product belongs to",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Date of receipt [dd/mm/yyyy]",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date of receipt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Y/M Receipt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Y/M Receipt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Archive Location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Archive Location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Batch #",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Batch #",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Total  Qty. Received",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total Qty. Received",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rule [Normal, Reduced, Tightened]",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rule (Normal, Reduced, Tightened)",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sampling method change request\n [Normal, Reduced, Tightened",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sampling method change request",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sample size visual ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sample Size",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "End date (end of IQC) [dd/mm/yyyy]",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "End date (end of IQC)",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Y/M End",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Y/M End",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Time from receipt to release [days]",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time from receipt to release (days)",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Batch Disposition [Pass/Fail]",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Batch Disposition (Pass/Fail)",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Comments ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comments",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MRB #\n[YYYY-XXXX]",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MRB #",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "QUAL_4000_0000776_Rev3_0_Receiving_Log",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Mrr_IQC_Followup",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Mrr_IQC_Followup",
						"description": "File Name Changed to \"QUAL_4000_0000776_Rev_3_0_Receiving_Log\"",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ScoreCards].[trunc_Mrr_IQC_Followup]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "ScoreCards/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SCAR_Log')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Mrr_Calc_SCAR_Log from xlsx",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Mrr_Calc_ScarLog And Mrr_ScarLog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "NCR #",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NCR #",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supplier Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Supplier Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supplier's No.",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Supplier's No.",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Part Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Part Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MRB # / Ref",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MRB # / Ref",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description of deviation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Description of deviation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Date of sending SCAR to supplier",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date of sending SCAR to supplier",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Y/M (trend)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Y/M (trend)",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Allowed return date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Allowed return date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Date of Reminder",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date of Reminder",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Date of SCAR Return",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date of SCAR Return",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QA's Review date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QA's Review date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SCAR Approval Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SCAR Approval Date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Effectiveness Results",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Effectiveness Results",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Effectiveness Checking Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Effectiveness Checking Date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Closing Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Closing Date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Comments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comments",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Time To Answer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time To Answer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Time to Approval",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time to Approval",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Time for Effectivness",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time for Effectivness",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Time to Close",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time to Close",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SCAR_Log",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Mrr_Calc_ScarLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Mrr_Calc_ScarLog And Mrr_ScarLog",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ScoreCards].[trunc_Mrr_ScarLog]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy Mrr_ScarLog",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Mrr_Calc_SCAR_Log from xlsx",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n\t   case when [NCR #] = 'n/a' then null else [NCR #] end [NCRNo] \n      ,[Supplier Name] as SupplierName\n      ,[Supplier's No.] as SupplierNo\n      ,case when [Part Description] = 'n/a' then null else [Part Description] end PartDescription\n      ,[PN]\n      ,case when [MRB # / Ref] = 'n/a' then null else [MRB # / Ref] end MRBNo\n      ,case when [Description of deviation] = 'n/a' then null else [Description of deviation] end as [DescriptionofDeviation]\n      ,case when [Date of sending SCAR to supplier] = 'n/a' then null else [Date of sending SCAR to supplier] end [ScarSendingDate]\n      ,case when [Y/M (trend)] = 'n/a' then null else [Y/M (trend)] end as Trend\n      ,case when [Allowed return date] = 'n/a' then null else [Allowed return date] end as [AllowedReturnDate]\n      ,case when [Date of Reminder] = 'n/a' then null else [Date of Reminder] end as ReminderDate\n      ,case when [Date of SCAR Return]  in ('n/a','NA') then null else [Date of SCAR Return] end as ScarReturningDate\n      ,case when [SCAR Approval Date] = 'n/a' then null else [SCAR Approval Date] end as [ScarApprovalDate]\n      ,case when [Effectiveness Results] = 'n/a' then null else [Effectiveness Results] end as [EffectivenessResults]\n      ,case when [Effectiveness Checking Date] = 'n/a' then null else [Effectiveness Checking Date] end as [EffectivenessCheckingDate]\n      ,case when [Closing Date] = 'n/a' then null else [Closing Date] end as [ClosingDate]\n      ,[Status]\n      ,[Comments]\nFROM [ScoreCards].[Mrr_Calc_ScarLog]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "NCRNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "NCRNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PartDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PartDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PN",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MRBNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MRBNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DescriptionofDeviation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DescriptionofDeviation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ScarSendingDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ScarSendingDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Trend",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Trend",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AllowedReturnDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AllowedReturnDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ReminderDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ReminderDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ScarReturningDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ScarReturningDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ScarApprovalDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ScarApprovalDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectivenessResults",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EffectivenessResults",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectivenessCheckingDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EffectivenessCheckingDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ClosingDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ClosingDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Comments",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Comments",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Mrr_Calc_ScarLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Mrr_ScarLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ScoreCards/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-08T09:06:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Classroom')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Classroom",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_SF_Classroom",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Classroom__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastActivityDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastActivityDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Training_Eff_Protocol__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Training_Eff_Protocol__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Completed__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "CompSuite__Completed__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Training_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "CompSuite__Training_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Training_Purpose__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Training_Purpose__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Number_of_Attendees__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Number_of_Attendees__c",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Canceled__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Canceled__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Trainer__c",
											"type": "String"
										},
										"sink": {
											"name": "Trainer__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Class_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "Class_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Company__c",
											"type": "String"
										},
										"sink": {
											"name": "Company__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Count_Open_Training__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Count_Open_Training__c",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Effectiveness_Check__c",
											"type": "String"
										},
										"sink": {
											"name": "Effectiveness_Check__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Pending_Trainees_Signature__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Pending_Trainees_Signature__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Training_Effectiveness_Protocol__c",
											"type": "String"
										},
										"sink": {
											"name": "Training_Effectiveness_Protocol__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Business_Unit__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Business_Unit__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Classroom",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Classroom",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_SF_Classroom",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Classroom]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Classroom_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Classroom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Classroom - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Classroom').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Classroom').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Classroom').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Classroom_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Classroom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Classroom]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Classroom - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Curriculum')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Curriculum",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_SF_Curriculum",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Curriculum__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastActivityDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastActivityDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Curriculum_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Curriculum_ID__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Lock_Name__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "CompSuite__Lock_Name__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__isRelated__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "CompSuite__isRelated__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Company__c",
											"type": "String"
										},
										"sink": {
											"name": "Company__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_SF_Curriculum",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Curriculum]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Curriculum_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Curriculum_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Curriculum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Curriculum - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Curriculum').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Curriculum').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Curriculum').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Curriculum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Curriculum]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Curriculum - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Curriculum_Requirement_Relations')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Curriculum_Requirement_Relations",
						"description": "",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_SF_Curriculum_Requirement_Relations",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Junction_Curriculum_Requirement_Header__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Curriculum__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Curriculum__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Requirement_Header__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Requirement_Header__c",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Curriculum_Requirement_Relations",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Curriculum_Requirement_Relations",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_SF_Curriculum_Requirement_Relations",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Curriculum_Requirement_Relations]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Curriculum_Requirement_Relations_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Curriculum_Requirement_Relations_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Curriculum_Requirement_Relations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Curriculum_Requirement_Relations - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Curriculum_Requirement_Relations').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Curriculum_Requirement_Relations').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Curriculum_Requirement_Relations').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Curriculum_Requirement_Relations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Curriculum_Requirement_Relations]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Curriculum_Requirement_Relations - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Departments')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Departments",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Trunc_Mrr_Department",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Department__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastActivityDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastActivityDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Department_Details__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Department_Details__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Department_Fax__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Department_Fax__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Department_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Department_Number__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Department_Phone__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Department_Phone__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Company__c",
											"type": "String"
										},
										"sink": {
											"name": "Company__c",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Departments",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Departments",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Trunc_Mrr_Department",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Departments]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Departments_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Departments_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Departments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Departments - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Departments').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Departments').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Departments').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Departments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Departments]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Departments",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Departments - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Employee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Employee",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunct_Mrr_SF_Employee",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT *\nFROM CompSuite__Employee__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastActivityDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastActivityDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Active__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "CompSuite__Active__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CompSuite__Department__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Department__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Employee_Email__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Employee_Email__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Employee_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Employee_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Site__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Site__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__User__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__User__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Employee_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "Employee_Number__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emp_User_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Emp_User_ID__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "User_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "User_ID__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Employee_Title__c",
											"type": "String"
										},
										"sink": {
											"name": "Employee_Title__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Company__c",
											"type": "String"
										},
										"sink": {
											"name": "Company__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Exists__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Exists__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "FirstTableCheck__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "FirstTableCheck__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Owner_Name__c",
											"type": "String"
										},
										"sink": {
											"name": "Owner_Name__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Business_Unit__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Business_Unit__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunct_Mrr_SF_Employee",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Employee]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Employee_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Employee_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Employee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Employee - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Employee').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Employee').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Employee').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Employee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Employee]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Employee_replica - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Job_Function')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Job_Function",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_SF_Job_Function",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Job_Function_Group__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Life_Cycle_Comments__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Lock_Fields__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__State__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__State__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Company__c",
											"type": "String"
										},
										"sink": {
											"name": "Company__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Job_Function",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Job_Function",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_SF_Job_Function",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Job_Function]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Job_Function_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Job_Function_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Job_Function",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Job_Function - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Job_Function').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Job_Function').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Job_Function').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Job_Function",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Curriculum]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Job_Function - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Job_Function_Curriculum_Relation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Job_Function_Curriculum_Relation",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_SF_Job_Function_Curriculum_Relation",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Junction_Job_Function_Curriculum__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Curriculum__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Curriculum__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Job_Function_Group__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Job_Function_Group__c",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Curriculum_JF_Relation",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Job_Function_Curriculum_Relation",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_SF_Job_Function_Curriculum_Relation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Job_Function_Curriculum_Relation]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Curriculum_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Job_Function_Curriculum_Relation_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Job_Function_Curriculum_Relation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Job_Function_Curriculum_Relation - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Job_Function_Curriculum_Relation').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Job_Function_Curriculum_Relation').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Job_Function_Curriculum_Relation').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Job_Function_Curriculum_Relation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Job_Function_Curriculum_Relation]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Job_Function_Curriculum_Relation - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_SF_Job_Function_Employee_Relations')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mrr_SF_Job_Function_Employee_Relations",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "trunc_Mrr_SF_Job_Function_Employee_Relations",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select * from CompSuite__Junction_Employee_Job_Function__c\nWHERE LastModifiedDate >= '@{activity('get watermark').output.firstRow.highValue}'",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								},
								"path": "adf-errorlogs-dev"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompSuite__Employee__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Employee__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompSuite__Job_Function_Group__c",
											"type": "String"
										},
										"sink": {
											"name": "CompSuite__Job_Function_Group__c",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SF_Employee_JF_Relation",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Training_Mrr_SF_Job_Function_Employee_Relations",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_Mrr_SF_Job_Function_Employee_Relations",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[training].[sp_trunc_Mrr_SF_Job_Function_Employee_Relations]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [highValue]\nFROM [watermarks].[highValues]\nWHERE [tableName] = 'Mrr_SF_Job_Function_Employee_Relations_replica'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarks_highValues",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[watermarks].[sp_set_watermark]",
							"storedProcedureParameters": {
								"columnName": {
									"value": "LastModifiedDate",
									"type": "String"
								},
								"schemaName": {
									"value": "training",
									"type": "String"
								},
								"tableName": {
									"value": "Mrr_SF_Job_Function_Employee_Relations_replica",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "stream activity - copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Job_Function_Employee_Relations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "\n[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Job_Function_Employee_Relations - Copy\",\n\"Copy Activity - Rows Read\" :@{activity('Mrr_SF_Job_Function_Employee_Relations').output.rowsRead},\n\"Copy Activity - Rows Written\" :@{activity('Mrr_SF_Job_Function_Employee_Relations').output.rowsCopied},\n\"Copy Activity - Rows Skipped\" :@{activity('Mrr_SF_Job_Function_Employee_Relations').output.rowsSkipped}\n}\n]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "upsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Mrr_SF_Job_Function_Employee_Relations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[training].[sp_Merge_Mrr_SF_Job_Function_Employee_Relations]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Training_Mrr_SF_Curriculum",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "stream activity - merge",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.powerbi.com/beta/7ef15b48-e070-48c2-b1c5-86e2488d6058/datasets/be953ba9-8789-435d-9add-fb35836ab916/rows?key=29QqE0bnK0yio0X2c1eZoMdV4XGuyh70Gfnxlbo5gXM9CXKFx4tWH%2F7Kv%2Ff5InszefKuhEMq%2FCNwqEhTP8JPfA%3D%3D",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "[[\n{\n\"Timestamp\" :\"@{utcnow()}\",\n\"Factory Name\" :\"@{pipeline().DataFactory}\",\n\"Pipeline Name\" :\"@{pipeline().Pipeline}\",\n\"Pipeline Run Id\" :\"@{pipeline().RunId}\",\n\"Activity Name\" :\"Mrr_SF_Job_Function_Employee_Relations - Merge\",\n\"Merge Activity - Insert\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.INSERT,\n0)},\n\"Merge Activity - Update\" :@{if(\ncontains(activity('upsert').output,'firstRow'),\nactivity('upsert').output.firstRow.UPDATE,\n0)}\n}\n]",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Training/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T13:00:26Z"
			},
			"dependsOn": []
		}
	]
}