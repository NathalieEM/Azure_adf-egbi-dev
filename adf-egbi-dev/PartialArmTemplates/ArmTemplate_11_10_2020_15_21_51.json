{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-egbi-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AWS_ServiceCenter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy User",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_trunc_Mrr_ServiceCenter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "st_error_log",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ServiceCenterName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ServiceCenterName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ServiceCenterSAPIdentity",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ServiceCenterSAPIdentity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fServiceCenterTypeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "fServiceCenterTypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ServiceCenterLogo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ServiceCenterLogo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IntakeFormEmail",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IntakeFormEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IntakeFormSAMA",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IntakeFormSAMA",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsActive",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsActive",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsQcore",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsQcore",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsICU",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsICU",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsAltera",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsAltera",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DistributorNumSuitable",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DistributorNumSuitable",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dtUpdated_FromSAP",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "dtUpdated_FromSAP",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "IsSyncToSAP",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSyncToSAP",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CompHandlerMail",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CompHandlerMail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fCreatedByID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "fCreatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "dtCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "dtCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "fUpdatedByID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "fUpdatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "dtUpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "dtUpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AWS_ServiceCenter",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Mrr_ServiceCenter",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "sp_trunc_Mrr_ServiceCenter",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ScoreCards].[sp_trunc_Mrr_ServiceCenters]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Service/Mrr"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-11T13:21:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AWS_ServiceCenter')]",
				"[concat(variables('factoryId'), '/datasets/Mrr_ServiceCenter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_Service')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AWS_Complaint",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_Complaint",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_Complaint_Issue",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_Complaint_Issue",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_Service",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_Service",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_Service_Activites",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_Service_Activites",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_KnownIssues",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_KnownIssues",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_User",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_User",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "Mrr_parm_CallCategory",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_parm_CallCategory",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_Call",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_Call",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_parm_CallSubCategory",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_parm_CallSubCategory",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_City",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_City",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_Country",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_Country",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_parm_CallStatus",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_parm_CallStatus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_parm_CallUrgency",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_parm_CallUrgency",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_State",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_State",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "AWS_ServiceCenter",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS_ServiceCenter",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"folder": {
					"name": "Service"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-11T13:21:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/AWS_ServiceCenter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_Dim_User')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_Stg_Dim_User",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[srv].[sp_Stg_Dim_User]"
						},
						"linkedServiceName": {
							"referenceName": "sqldb_egbi_dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Service/Stg"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-22T09:12:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AWS_ServiceCenter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AWS_Service_portal",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AWS"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ServiceCenterName",
						"type": "nvarchar"
					},
					{
						"name": "ServiceCenterSAPIdentity",
						"type": "nvarchar"
					},
					{
						"name": "fServiceCenterTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ServiceCenterLogo",
						"type": "nvarchar"
					},
					{
						"name": "IntakeFormEmail",
						"type": "nvarchar"
					},
					{
						"name": "IntakeFormSAMA",
						"type": "nvarchar"
					},
					{
						"name": "IsActive",
						"type": "bit"
					},
					{
						"name": "IsQcore",
						"type": "bit"
					},
					{
						"name": "IsICU",
						"type": "bit"
					},
					{
						"name": "IsAltera",
						"type": "bit"
					},
					{
						"name": "DistributorNumSuitable",
						"type": "nvarchar"
					},
					{
						"name": "dtUpdated_FromSAP",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "IsSyncToSAP",
						"type": "bit"
					},
					{
						"name": "CompHandlerMail",
						"type": "nvarchar"
					},
					{
						"name": "__Office",
						"type": "char"
					},
					{
						"name": "fCreatedByID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dtCreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fUpdatedByID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dtUpdatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tbl_ServiceCenter"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mrr_ServiceCenter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqldb_egbi_dev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQLDB-EGBI-DEV/Service/Mrr"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ServiceCenterName",
						"type": "nvarchar"
					},
					{
						"name": "ServiceCenterSAPIdentity",
						"type": "nvarchar"
					},
					{
						"name": "fServiceCenterTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ServiceCenterLogo",
						"type": "nvarchar"
					},
					{
						"name": "IntakeFormEmail",
						"type": "nvarchar"
					},
					{
						"name": "IntakeFormSAMA",
						"type": "nvarchar"
					},
					{
						"name": "IsActive",
						"type": "bit"
					},
					{
						"name": "IsQcore",
						"type": "bit"
					},
					{
						"name": "IsICU",
						"type": "bit"
					},
					{
						"name": "IsAltera",
						"type": "bit"
					},
					{
						"name": "DistributorNumSuitable",
						"type": "nvarchar"
					},
					{
						"name": "dtUpdated_FromSAP",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "IsSyncToSAP",
						"type": "bit"
					},
					{
						"name": "CompHandlerMail",
						"type": "nvarchar"
					},
					{
						"name": "fCreatedByID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dtCreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fUpdatedByID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dtUpdatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "srv",
					"table": "Mrr_ServiceCenter"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tgr_workdays_1am_UTC')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MainService",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2020-07-16T13:51:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1,
								7
							],
							"weekDays": [
								"Sunday",
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trg_qa_every10m')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Mrr_Items1",
							"type": "PipelineReference"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "Intgrator To  Azure2",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 10,
						"startTime": "2020-08-17T07:24:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		}
	]
}