{
	"name": "Mrr_Device",
	"properties": {
		"activities": [
			{
				"name": "Truncate table EDHR Mrr Device",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[EDHR].[sp_trunc_Mrr_Device]"
				},
				"linkedServiceName": {
					"referenceName": "sqldb_egbi_dev",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Mrr_device",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Truncate table EDHR Mrr Device",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "get watermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT *\nFROM [dbo].[_Device]\nWHERE [@{activity('get watermark').output.firstRow.columnName}] >= '@{activity('get watermark').output.firstRow.highValue}'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "st_error_log",
							"type": "LinkedServiceReference"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ID",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "_SerialNumber",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "SerialNumber",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "_Comments",
									"type": "String",
									"physicalType": "ntext"
								},
								"sink": {
									"name": "Comments",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "_Brand",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "Brand",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "_PartNumber",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "PartNumber",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "_OwnerGroup",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "OwnerGroup",
									"type": "Int32",
									"physicalType": "int"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Mrr_Device",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "EDHR_MRR_Device",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "get watermark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[watermarks].[sp_get_watermark]",
						"storedProcedureParameters": {
							"schemaName": {
								"type": "String",
								"value": "EDHR"
							},
							"tableName": {
								"type": "String",
								"value": "Mrr_Device"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "watermarks_highValues",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "upsert",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Mrr_device",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[EDHR].[sp_Merge_Mrr_Device]"
				},
				"linkedServiceName": {
					"referenceName": "sqldb_egbi_dev",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "set watermark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "upsert",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[watermarks].[sp_set_watermark]",
					"storedProcedureParameters": {
						"columnName": {
							"value": "ID",
							"type": "String"
						},
						"schemaName": {
							"value": "EDHR",
							"type": "String"
						},
						"tableName": {
							"value": "Mrr_Device",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "sqldb_egbi_dev",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"param_tableName": {
				"type": "string",
				"defaultValue": "Mrr_Device"
			}
		},
		"folder": {
			"name": "EDHR/MRR"
		},
		"annotations": [],
		"lastPublishTime": "2020-08-18T12:11:54Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}