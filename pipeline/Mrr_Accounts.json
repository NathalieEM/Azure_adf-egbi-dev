{
	"name": "Mrr_Accounts",
	"properties": {
		"activities": [
			{
				"name": "Mrr_Accounts",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "trunc_Mrr_Accounts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select \t\nAcctCode,\n\tAcctName,\n\tU_PORF_Dep  OverCode,\n\tU_PORF_Alloc OverCode2, \n    [U_PORF] ,\ncase when GroupMask= 1 then GroupMask End GroupMask ,\n\tDB_NAME() AS DB_NAME \nFROM [dbo].OACT\n\nWHERE \n  [U_PORF]='Y' AND \n  frozenFor ='N' \n  AND Levels='4' ",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "AzureBlobStorage1",
							"type": "LinkedServiceReference"
						}
					},
					"enableSkipIncompatibleRow": true,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AcctCode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AcctCode",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "AcctName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AcctName",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "OverCode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "OverCode",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "OverCode2",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "OverCode2",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "U_PORF",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "U_PORF",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "GroupMask",
									"type": "Int16",
									"physicalType": "smallint"
								},
								"sink": {
									"name": "GroupMask",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "DB_NAME",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "DB_NAME",
									"type": "String",
									"physicalType": "nvarchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Accounts_OACT",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "porf_Mrr_Accounts",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "trunc_Mrr_Accounts",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[porf].[sp_trunc_Mrr_Accounts]"
				},
				"linkedServiceName": {
					"referenceName": "sqldb_egbi_dev",
					"type": "LinkedServiceReference"
				}
			}
		],
		"folder": {
			"name": "PORF/Mrr"
		},
		"annotations": [],
		"lastPublishTime": "2020-08-19T12:30:14Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}